{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as React from 'react';\n/**\n *\n * @param {String} key The key to set in localStorage for this value\n * @param {Object} defaultValue The value to use if it is not already in localStorage\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\n */\n\nfunction useLocalStorageState(key) {\n  _s();\n\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let {\n    serialize = JSON.stringify,\n    deserialize = JSON.parse\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const [state, setState] = React.useState(() => {\n    const valueInLocalStorage = window.localStorage.getItem(key);\n\n    if (valueInLocalStorage) {\n      return deserialize(valueInLocalStorage);\n    }\n\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n  });\n  const prevKeyRef = React.useRef(key);\n  React.useEffect(() => {\n    const prevKey = prevKeyRef.current;\n\n    if (prevKey !== key) {\n      window.localStorage.removeItem(prevKey);\n    }\n\n    prevKeyRef.current = key;\n    window.localStorage.setItem(key, serialize(state));\n  }, [key, state, serialize]);\n  return [state, setState];\n}\n\n_s(useLocalStorageState, \"o2pchuf6ZhtfECC1YYu/GyuZOc0=\");\n\nexport { useLocalStorageState };","map":{"version":3,"sources":["/Users/camiaguado/Repositorios/tic-tac-toe-game/src/utils.js"],"names":["React","useLocalStorageState","key","defaultValue","serialize","JSON","stringify","deserialize","parse","state","setState","useState","valueInLocalStorage","window","localStorage","getItem","prevKeyRef","useRef","useEffect","prevKey","current","removeItem","setItem"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,oBAAT,CACIC,GADJ,EAII;AAAA;;AAAA,MAFAC,YAEA,uEAFe,EAEf;AAAA,MADA;AAACC,IAAAA,SAAS,GAAGC,IAAI,CAACC,SAAlB;AAA6BC,IAAAA,WAAW,GAAGF,IAAI,CAACG;AAAhD,GACA,uEADyD,EACzD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe,MAAM;AAC7C,UAAMC,mBAAmB,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4Bb,GAA5B,CAA5B;;AACA,QAAIU,mBAAJ,EAAyB;AACvB,aAAOL,WAAW,CAACK,mBAAD,CAAlB;AACD;;AACD,WAAO,OAAOT,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,EAAjD,GAAsDA,YAA7D;AACD,GANyB,CAA1B;AAQA,QAAMa,UAAU,GAAGhB,KAAK,CAACiB,MAAN,CAAaf,GAAb,CAAnB;AAEAF,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,UAAMC,OAAO,GAAGH,UAAU,CAACI,OAA3B;;AACA,QAAID,OAAO,KAAKjB,GAAhB,EAAqB;AACnBW,MAAAA,MAAM,CAACC,YAAP,CAAoBO,UAApB,CAA+BF,OAA/B;AACD;;AACDH,IAAAA,UAAU,CAACI,OAAX,GAAqBlB,GAArB;AACAW,IAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4BpB,GAA5B,EAAiCE,SAAS,CAACK,KAAD,CAA1C;AACD,GAPD,EAOG,CAACP,GAAD,EAAMO,KAAN,EAAaL,SAAb,CAPH;AASA,SAAO,CAACK,KAAD,EAAQC,QAAR,CAAP;AACD;;GAzBMT,oB;;AA2BP,SAAQA,oBAAR","sourcesContent":["\nimport * as React from 'react'\n/**\n *\n * @param {String} key The key to set in localStorage for this value\n * @param {Object} defaultValue The value to use if it is not already in localStorage\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\n */\n\nfunction useLocalStorageState(\n    key,\n    defaultValue = '',\n    {serialize = JSON.stringify, deserialize = JSON.parse} = {},\n  ) {\n    const [state, setState] = React.useState(() => {\n      const valueInLocalStorage = window.localStorage.getItem(key)\n      if (valueInLocalStorage) {\n        return deserialize(valueInLocalStorage)\n      }\n      return typeof defaultValue === 'function' ? defaultValue() : defaultValue\n    })\n  \n    const prevKeyRef = React.useRef(key)\n  \n    React.useEffect(() => {\n      const prevKey = prevKeyRef.current\n      if (prevKey !== key) {\n        window.localStorage.removeItem(prevKey)\n      }\n      prevKeyRef.current = key\n      window.localStorage.setItem(key, serialize(state))\n    }, [key, state, serialize])\n  \n    return [state, setState]\n  }\n  \n  export {useLocalStorageState}\n  "]},"metadata":{},"sourceType":"module"}